<?php

namespace Tests\Feature;

use App\Client;
use App\User;
use function factory;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ClientTest extends TestCase
{
    use DatabaseMigrations;
    protected $user,$clients;
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user=factory(User::class)->create();
        $this->clients=factory(Client::class)->create();
        

    }

    /** @test */
    public function Nadie_puede_navegar_clientes()
{
    $this->withExceptionHandling();

    $this->assertGuest($guard = null);
    $response = $this->get('/clientes');


    $response
        ->assertStatus(302)
        ->assertDontSee('Clientes');

}

    /** @test */
    public function Usuario_puede_navegar_clientes()
    {
        //$this->withExceptionHandling();
        $this->signIn();
        $response=$this->get('/clientes');

        $response
            ->assertSee('Clientes')
            ->assertStatus(200);


    }

    /** @test */
    public function Usuario_puede_crear_clientes()
    {
        $this->withExceptionHandling();
        $this->signIn();
        $this->clients->nombre=null;
        $this->clients->apellidos=null;
        $this->clients->nif=null;

        $response=$this->post('/clientes',$this->clients->toArray());
        $response
            ->assertStatus(302)
            ->assertSessionHasErrors(['nombre','apellidos','nif']);


        $this->signIn();
        $this->clients->nombre='Ratoncito';
        $this->clients->apellidos=null;
        $this->clients->nif=null;

        $response=$this->post('/clientes',$this->clients->toArray());
        $response
            ->assertStatus(302)
            ->assertSessionHasErrors(['apellidos','nif']);


        $this->signIn();
        $this->clients->nombre='Ratoncito';
        $this->clients->apellidos='Perez';
        $this->clients->nif=null;

        $response=$this->post('/clientes',$this->clients->toArray());
        $response
            ->assertStatus(302)
            ->assertSessionHasErrors(['nif']);


        $this->signIn();
        $this->clients->nombre='Ratoncito';
        $this->clients->apellidos='Perez';
        $this->clients->nif='42508410R';

        $response=$this->post('/clientes',$this->clients->toArray());
        $response
            ->assertStatus(302)
            ->assertSessionHasErrors(['nif']);


        $this->signIn();
        $this->clients->nombre='Ratoncito';
        $this->clients->apellidos='Perez';
        $this->clients->nif='42508410V';
        $this->clients->fechanacimiento='2000-03-03';
        $this->clients->direccion='';
        $this->clients->codigopostal='';
        $this->clients->localidad='';
        $this->clients->provincia='';
        $this->clients->telefono1='';
        $this->clients->telefono2='';
        $this->clients->movil='';
        $this->clients->email='';
        $this->clients->iban='';
        $this->clients->nota='';
        $response=$this->post('/clientes',$this->clients->toArray());
        $response
            ->assertStatus(302)
            ->assertRedirect()
            ->assertSessionHas('message',['success',__('Cliente creado correctamente')]);




       /* $clients->name='alvaro';
        $response=$this->post('/clientes',$clients->toArray(),['HTTP_REFERER'=>'/clientes']);

        $response
            ->assertStatus(302)
            ->assertSessionHas('message',['success',__('Cliente creado correctamente')]);*/


    }
}
